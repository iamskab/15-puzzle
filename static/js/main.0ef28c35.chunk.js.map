{"version":3,"sources":["lib/utils.js","lib/levels-factory.js","components/Tile.js","components/Grid.js","lib/game-status.js","components/Menu.js","components/Game.js","components/GitHubIcon.js","components/Footer.js","components/App.js","index.js"],"names":["randomSubarray","arr","size","temp","index","shuffled","slice","i","length","Math","floor","random","Number","isInteger","sqrt","Error","tileSet","Array","from","v","parseInt","Tile","props","onClick","bind","this","className","number","visible","classes","classnames","Component","defaultProps","correct","styled","width","height","left","top","Grid","tiles","onTileClick","gridSize","map","tile","tileId","key","tileSize","GAME_IDLE","Symbol","GAME_STARTED","GAME_OVER","GAME_PAUSED","StyledToolbar","Toolbar","Menu","seconds","moves","onResetClick","onPauseClick","onNewClick","gameState","text","label","onTouchTap","title","icon","disabled","query","component","Game","keyDownListener","ctrlKey","altKey","code","original","solvedTiles","generateTiles","Object","assign","clearInterval","timerId","setState","dialogOpen","handleDialogClose","handleSnackbarClose","reason","snackbarOpen","prevState","newGameState","newSnackbarText","setTimer","snackbarText","state","indexA","indexB","emptyTile","find","t","emptyTileIndex","indexOf","tileIndex","findIndex","tileACoords","tileBCoords","sameRow","row","sameColumn","column","columnDiff","rowDiff","diffColumn","abs","diffRow","neighbours","distance","rows","columns","distanceBetween","forEach","field","sw","checkGameOver","isGameOver","numbers","document","addEventListener","nextProps","newTiles","getTileCoords","filter","setInterval","addTimer","actions","modal","open","onRequestClose","message","GitHubIcon","version","xmlns","viewBox","d","FooterContent","div","Footer","href","target","rel","App","level","newLevel","levelFactory","newOriginalLevel","originalLevel","MuiTheme","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0ef28c35.chunk.js","sourcesContent":["/**\n * Return an Array containing all numbers such that 0 = n <= length in\n * ascending order.\n * @param {Number} length Number of items in the resulting Array\n * @returns {Array} Array of numbers\n */\nexport const range = length => {\n  return Array.from({ length }, (v, i) => Number.parseInt(i + 1, 10));\n};\n\n/**\n * Get random slice from an array based on Fisher Yates shuffle.\n * https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\n * @param {Array} arr Input Array\n * @param {Number} size Slice size\n * @returns {Array} Resulting slice\n */\nexport const randomSubarray = (arr, size) => {\n  let shuffled = arr.slice(0), i = arr.length, temp, index;\n  while (i--) {\n    index = Math.floor((i + 1) * Math.random());\n    temp = shuffled[index];\n    shuffled[index] = shuffled[i];\n    shuffled[i] = temp;\n  }\n\n  return shuffled.slice(0, size);\n};\n\n/**\n * Returns an Object containing grid coordinates based on the index\n * in an Array.\n * @param {Number} index Position of an item in an Array\n * @param {Number} gridSize Size of the Grid\n * @param {Number} tileSize Size of a Tile, in pixels, to calculate the absolute\n * positioning within the Grid\n * @return {Object} Object containing coordinates\n */\nexport const getTileCoords = (index, gridSize, tileSize) => {\n  if (!Number.isInteger(gridSize) || gridSize < 1) {\n    throw new Error(`Cannot get coords from tile with gridSize: <${gridSize}>`);\n  }\n\n  if (!Number.isInteger(tileSize) || tileSize < 1) {\n    throw new Error(`Cannot get coords from tile with tileSize: <${tileSize}>`);\n  }\n\n  const column = index % gridSize;\n  const row = index / gridSize << 0;\n\n  return {\n    column,\n    row,\n    left: column * tileSize,\n    top: row * tileSize,\n    tileId: index,\n  };\n};\n\n/**\n * Calculate distance between two sets of coordinates\n *\n * @param  {Object} tileACoords Coordinates of Tile A\n * @param  {Object} tileBCoords Coordinates of Tile B\n * @returns {Object} Result\n */\nexport const distanceBetween = (tileACoords, tileBCoords) => {\n  const sameRow = tileACoords.row === tileBCoords.row;\n  const sameColumn = tileACoords.column === tileBCoords.column;\n  const columnDiff = tileACoords.column - tileBCoords.column;\n  const rowDiff = tileACoords.row - tileBCoords.row;\n  const diffColumn = Math.abs(columnDiff) === 1;\n  const diffRow = Math.abs(rowDiff) === 1;\n  const sameRowDiffColumn = sameRow && diffColumn;\n  const sameColumnDiffRow = sameColumn && diffRow;\n\n  return {\n    neighbours: sameRowDiffColumn || sameColumnDiffRow,\n    distance: {\n      rows: rowDiff,\n      columns: columnDiff,\n    },\n  };\n};\n\nexport const invert = (arr, indexA, indexB, fields) => {\n  fields.forEach(field => {\n    const sw = arr[indexA][field];\n    arr[indexA][field] = arr[indexB][field];\n    arr[indexB][field] = sw;\n  });\n};\n","import { range, randomSubarray } from './utils';\n\n/**\n * Generate a level of a given size\n * @param {Number} size The total size of the level, must be a perfect square\n * @returns {Object} TileSet object representing the level\n */\nexport default size => {\n  if (!Number.isInteger(Math.sqrt(size))) {\n    throw new Error(`Cannot generate level of size: <${size}>`);\n  }\n\n  if (size < 1 || size > 100) {\n    throw new Error(`Cannot generate level of size: <${size}>`);\n  }\n\n  return {\n    tileSet: randomSubarray(range(size), size),\n  };\n};\n","/* eslint-disable react/forbid-foreign-prop-types */\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nclass Tile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.props.onClick(this.props);\n  }\n\n  render() {\n    const { className, number, visible } = this.props;\n    const classes = classnames({\n      [className]: true,\n      'tile-invisible': !visible,\n    });\n\n    return (\n      <div className={classes} onClick={this.onClick}>\n        <span className=\"tile-number\">{number}</span>\n      </div>\n    );\n  }\n}\n\nTile.propTypes = {\n  tileId: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  left: PropTypes.number.isRequired,\n  top: PropTypes.number.isRequired,\n  number: PropTypes.number,\n  onClick: PropTypes.func,\n  correct: PropTypes.bool,\n  visible: PropTypes.bool,\n};\n\nTile.defaultProps = {\n  number: 0,\n  correct: false,\n  visible: true,\n};\n\nexport default styled(Tile)`\n  border: 1px solid #FFD1AA;\n  position: absolute;\n  width: ${props => props.width}px;\n  height: ${props => props.height}px;\n  left: ${props => props.left}px;\n  top: ${props => props.top}px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  background-color: ${props => props.correct ? '#226666' : '#D4726A'};\n  transition-property: top, left, background-color;\n  transition-duration: .300s;\n  transition-timing-function: ease-in;\n\n  .tile-number {\n    color: #FFD1AA;\n    font-weight: 400;\n    font-size: 1.8em;\n    user-select: none;\n  }\n\n  &.tile-invisible {\n    display: none;\n  }\n`;\n\n// export const propTypes = Tile.propTypes;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Tile from './Tile';\n//  { propTypes as TilePropTypes }\nclass Grid extends Component {\n  render() {\n    const {\n      className,\n      tiles,\n      onTileClick,\n      gridSize,\n    } = this.props;\n\n    return (\n      <div className={className}>\n        <div className=\"tiles\">\n          {tiles.map((tile, tileId) => {\n            return (\n              <Tile\n                {...tile}\n                key={`tile-${tileId}`}\n                correct={tile.tileId + 1 === tile.number}\n                onClick={onTileClick}\n                visible={tile.number < gridSize ** 2}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n/*\nTilePropTypes = {\n  tileId: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  left: PropTypes.number.isRequired,\n  top: PropTypes.number.isRequired,\n  number: PropTypes.number,\n  onClick: PropTypes.func,\n  correct: PropTypes.bool,\n  visible: PropTypes.bool,\n};\n*/\nGrid.propTypes = {\n  tiles: PropTypes.arrayOf(PropTypes.shape(\n    {\n      tileId: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n      left: PropTypes.number.isRequired,\n      top: PropTypes.number.isRequired,\n      number: PropTypes.number,\n      onClick: PropTypes.func,\n      correct: PropTypes.bool,\n      visible: PropTypes.bool,\n    }\n  )).isRequired,\n  gridSize: PropTypes.number.isRequired,\n  tileSize: PropTypes.number.isRequired,\n  onTileClick: PropTypes.func.isRequired,\n};\n\nexport default styled(Grid)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 500px;\n\n  & .tiles {\n    width: ${props => props.tileSize * props.gridSize}px;\n    height: ${props => props.tileSize * props.gridSize}px;\n    position: relative;\n    text-align: center;\n  }\n`;\n","export const GAME_IDLE = Symbol('GAME_IDLE');\nexport const GAME_STARTED = Symbol('GAME_STARTED');\nexport const GAME_OVER = Symbol('GAME_OVER');\nexport const GAME_PAUSED = Symbol('GAME_PAUSED');\n\nexport default {\n  GAME_IDLE,\n  GAME_STARTED,\n  GAME_OVER,\n  GAME_PAUSED,\n};\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Toolbar, ToolbarGroup, ToolbarTitle } from 'material-ui/Toolbar';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport Chip from 'material-ui/Chip';\nimport Avatar from 'material-ui/Avatar';\nimport Alarm from 'material-ui/svg-icons/action/alarm';\nimport Moves from 'material-ui/svg-icons/action/compare-arrows';\nimport Replay from 'material-ui/svg-icons/av/replay';\nimport Pause from 'material-ui/svg-icons/av/pause';\nimport Play from 'material-ui/svg-icons/av/play-arrow';\nimport New from 'material-ui/svg-icons/action/power-settings-new';\nimport { GAME_STARTED, GAME_PAUSED } from '../lib/game-status';\nimport PropTypes from 'prop-types';\nimport MediaQuery from 'react-responsive';\n\nconst StyledToolbar = styled(Toolbar)`\n\n@media (max-width: 1190px) {\n  \n  & {\n    justify-content: center !important;\n  }\n\n  .toolbarTitle {\n    display: none;\n    \n  }\n\n}\n\n@media (max-width: 890px) {\n\n  .menuButton {\n    margin: 10px 5px !important;\n    min-width: 36px !important;\n  }\n\n  .menuIcon {\n    margin-left: 0px !important;\n  }\n\n  .menuIcon+span {\n    display: none !important;\n  }\n\n}\n\n`;\n\nclass Menu extends Component {\n  render() {\n    const {\n      seconds,\n      moves,\n      onResetClick,\n      onPauseClick,\n      onNewClick,\n      gameState,\n    } = this.props;\n\n    return (\n      <StyledToolbar className=\"toolbar\">\n        <ToolbarTitle\n          className=\"toolbarTitle\"\n          text=\"React 15-puzzle game\"\n          \n        />\n        <ToolbarGroup>\n          <RaisedButton\n            className=\"menuButton\"\n            label=\"New game\"\n            onTouchTap={onNewClick}\n            title=\"Start a new game\"\n            icon={<New className=\"menuIcon\" />}\n          />\n          <RaisedButton\n            className=\"menuButton\"\n            label={gameState === GAME_PAUSED ? 'Continue' : 'Pause'}\n            onTouchTap={onPauseClick}\n            icon={\n              gameState === GAME_PAUSED\n                ? <Play className=\"menuIcon\" />\n                : <Pause className=\"menuIcon\" />\n            }\n            title=\"Pause/Continue current game.\"\n            disabled={gameState !== GAME_STARTED && gameState !== GAME_PAUSED}\n          />\n          <RaisedButton\n            className=\"menuButton\"\n            label=\"Reset game\"\n            onTouchTap={onResetClick}\n            title=\"Reset game\"\n            icon={<Replay className=\"menuIcon\" />}\n          />\n          <Chip>\n            <Avatar icon={<Alarm />} />\n            <MediaQuery query=\"(min-width: 772px)\" component=\"span\">\n              Time Elapsed:{' '}\n            </MediaQuery>\n            {seconds}s\n          </Chip>\n          <Chip>\n            <Avatar icon={<Moves />} />\n            <MediaQuery query=\"(min-width: 772px)\" component=\"span\">\n              Moves Counter:{' '}\n            </MediaQuery>\n            {moves}\n          </Chip>\n        </ToolbarGroup>\n      </StyledToolbar>\n    );\n  }\n}\n\nMenu.propTypes = {\n  seconds: PropTypes.number.isRequired,\n  moves: PropTypes.number.isRequired,\n  onResetClick: PropTypes.func.isRequired,\n  onPauseClick: PropTypes.func.isRequired,\n  onNewClick: PropTypes.func.isRequired,\n  gameState: PropTypes.symbol.isRequired,\n};\n\nexport default Menu;\n","import React, { Component } from 'react';\nimport { getTileCoords, distanceBetween, invert } from '../lib/utils';\nimport Grid from './Grid';\nimport Menu from './Menu';\nimport {\n  GAME_IDLE,\n  GAME_OVER,\n  GAME_STARTED,\n  GAME_PAUSED,\n} from '../lib/game-status';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\nimport Snackbar from 'material-ui/Snackbar';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n\n    const { numbers, tileSize, gridSize, moves, seconds } = props;\n    const tiles = this.generateTiles(numbers, gridSize, tileSize);\n\n    this.state = {\n      tiles,\n      gameState: GAME_IDLE,\n      moves,\n      seconds,\n      dialogOpen: false,\n      snackbarOpen: false,\n      snackbarText: '',\n    };\n\n    document.addEventListener('keydown', this.keyDownListener);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { tileSize, gridSize } = this.props;\n    const newTiles = this.generateTiles(nextProps.numbers, gridSize, tileSize);\n\n    this.setState({\n      gameState: GAME_IDLE,\n      tiles: newTiles,\n      moves: 0,\n      seconds: 0,\n    });\n\n    clearInterval(this.timerId);\n  }\n\n  // End game by pressing CTRL + ALT + F\n  keyDownListener = key => {\n    if (key.ctrlKey && key.altKey && key.code === 'KeyF') {\n      const { original, gridSize, tileSize } = this.props;\n      const solvedTiles = this.generateTiles(original, gridSize, tileSize).map((\n        tile,\n        index,\n      ) => {\n        tile.number = index + 1;\n        return Object.assign({}, tile);\n      });\n\n      clearInterval(this.timerId);\n\n      this.setState({\n        gameState: GAME_OVER,\n        tiles: solvedTiles,\n        dialogOpen: true,\n      });\n    }\n  };\n\n  handleDialogClose = () => {\n    this.setState({\n      dialogOpen: false,\n    });\n  };\n\n  handleSnackbarClose = reason => {\n    this.setState({\n      snackbarOpen: false,\n    });\n  };\n\n  generateTiles(numbers, gridSize, tileSize) {\n    const tiles = [];\n\n    numbers.forEach((number, index) => {\n      tiles[index] = {\n        ...getTileCoords(index, gridSize, tileSize),\n        width: this.props.tileSize,\n        height: this.props.tileSize,\n        number,\n      };\n    });\n\n    return tiles;\n  }\n\n  isGameOver(tiles) {\n    const correctedTiles = tiles.filter(tile => {\n      return tile.tileId + 1 === tile.number;\n    });\n\n    if (correctedTiles.length === (this.props.gridSize) ** 2) {\n      clearInterval(this.timerId);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  addTimer() {\n    this.setState(prevState => {\n      return { seconds: prevState.seconds + 1 };\n    });\n  }\n\n  setTimer() {\n    this.timerId = setInterval(\n      () => {\n        this.addTimer();\n      },\n      1000,\n    );\n  }\n\n  onPauseClick = () => {\n    this.setState(prevState => {\n      let newGameState = null;\n      let newSnackbarText = null;\n\n      if (prevState.gameState === GAME_STARTED) {\n        clearInterval(this.timerId);\n        newGameState = GAME_PAUSED;\n        newSnackbarText = 'The game is currently paused.';\n      } else {\n        this.setTimer();\n        newGameState = GAME_STARTED;\n        newSnackbarText = 'Game on!';\n      }\n\n      return {\n        gameState: newGameState,\n        snackbarOpen: true,\n        snackbarText: newSnackbarText,\n      };\n    });\n  };\n\n  onTileClick = tile => {\n    if (\n      this.state.gameState === GAME_OVER || this.state.gameState === GAME_PAUSED\n    ) {\n      return;\n    }\n\n    // Set Timer in case of first click\n    if (this.state.moves === 0) {\n      this.setTimer();\n    }\n\n    const { gridSize } = this.props;\n\n    // Find empty tile\n    const emptyTile = this.state.tiles.find(t => t.number === gridSize ** 2);\n    const emptyTileIndex = this.state.tiles.indexOf(emptyTile);\n\n    // Find index of tile\n    const tileIndex = this.state.tiles.findIndex(t => t.number === tile.number);\n\n    // Is this tale neighbouring the zero tile? If so, switch them.\n    const d = distanceBetween(tile, emptyTile);\n    if (d.neighbours) {\n      let t = Array.from(this.state.tiles).map(t => ({ ...t }));\n\n      invert(t, emptyTileIndex, tileIndex, [\n        'top',\n        'left',\n        'row',\n        'column',\n        'tileId',\n      ]);\n\n      const checkGameOver = this.isGameOver(t);\n\n      this.setState({\n        gameState: checkGameOver ? GAME_OVER : GAME_STARTED,\n        tiles: t,\n        moves: this.state.moves + 1,\n        dialogOpen: checkGameOver ? true : false,\n      });\n    }\n  };\n\n  render() {\n    const {\n      className,\n      gridSize,\n      tileSize,\n      onResetClick,\n      onNewClick,\n    } = this.props;\n\n    const actions = [\n      <FlatButton label=\"Close\" onTouchTap={this.handleDialogClose} />,\n    ];\n\n    return (\n      <div className={className}>\n        <Menu\n          seconds={this.state.seconds}\n          moves={this.state.moves}\n          onResetClick={onResetClick}\n          onPauseClick={this.onPauseClick}\n          onNewClick={onNewClick}\n          gameState={this.state.gameState}\n        />\n        <Grid\n          gridSize={gridSize}\n          tileSize={tileSize}\n          tiles={this.state.tiles}\n          onTileClick={this.onTileClick}\n        />\n        <Dialog\n          title=\"Congrats!\"\n          actions={actions}\n          modal={false}\n          open={this.state.dialogOpen}\n          onRequestClose={this.handleDialogClose}\n        >\n          You've solved the puzzle in{' '}\n          {this.state.moves}\n          {' '}moves in{' '}\n          {this.state.seconds}\n          {' '}seconds!\n        </Dialog>\n        <Snackbar\n          open={this.state.snackbarOpen}\n          message={this.state.snackbarText}\n          onRequestClose={this.handleSnackbarClose}\n        />\n      </div>\n    );\n  }\n}\n\nGame.propTypes = {\n  numbers: PropTypes.arrayOf(PropTypes.number).isRequired,\n  original: PropTypes.arrayOf(PropTypes.number),\n  tileSize: PropTypes.number,\n  gridSize: PropTypes.number,\n  moves: PropTypes.number,\n  seconds: PropTypes.number,\n};\n\nGame.defaultProps = {\n  tileSize: 90,\n  gridSize: 4,\n  moves: 0,\n  seconds: 0,\n};\n\nexport default styled(Game)`\n  flex: 1;\n`;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nclass GitHubIcon extends Component {\n  render() {\n    const { className } = this.props;\n    return (\n      <svg\n        className={className}\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24px\"\n        height=\"24px\"\n        viewBox=\"0 0 435.549 435.549\"\n      >\n        <g>\n          <path\n            d=\"M409.132,114.573c-19.608-33.596-46.205-60.194-79.798-79.8C295.736,15.166,259.057,5.365,219.271,5.365\n                    c-39.781,0-76.472,9.804-110.063,29.408c-33.596,19.605-60.192,46.204-79.8,79.8C9.803,148.168,0,184.854,0,224.63\n                    c0,47.78,13.94,90.745,41.827,128.906c27.884,38.164,63.906,64.572,108.063,79.227c5.14,0.954,8.945,0.283,11.419-1.996\n                    c2.475-2.282,3.711-5.14,3.711-8.562c0-0.571-0.049-5.708-0.144-15.417c-0.098-9.709-0.144-18.179-0.144-25.406l-6.567,1.136\n                    c-4.187,0.767-9.469,1.092-15.846,1c-6.374-0.089-12.991-0.757-19.842-1.999c-6.854-1.231-13.229-4.086-19.13-8.559\n                    c-5.898-4.473-10.085-10.328-12.56-17.556l-2.855-6.57c-1.903-4.374-4.899-9.233-8.992-14.559\n                    c-4.093-5.331-8.232-8.945-12.419-10.848l-1.999-1.431c-1.332-0.951-2.568-2.098-3.711-3.429c-1.142-1.331-1.997-2.663-2.568-3.997\n                    c-0.572-1.335-0.098-2.43,1.427-3.289c1.525-0.859,4.281-1.276,8.28-1.276l5.708,0.853c3.807,0.763,8.516,3.042,14.133,6.851\n                    c5.614,3.806,10.229,8.754,13.846,14.842c4.38,7.806,9.657,13.754,15.846,17.847c6.184,4.093,12.419,6.136,18.699,6.136\n                    c6.28,0,11.704-0.476,16.274-1.423c4.565-0.952,8.848-2.383,12.847-4.285c1.713-12.758,6.377-22.559,13.988-29.41\n                    c-10.848-1.14-20.601-2.857-29.264-5.14c-8.658-2.286-17.605-5.996-26.835-11.14c-9.235-5.137-16.896-11.516-22.985-19.126\n                    c-6.09-7.614-11.088-17.61-14.987-29.979c-3.901-12.374-5.852-26.648-5.852-42.826c0-23.035,7.52-42.637,22.557-58.817\n                    c-7.044-17.318-6.379-36.732,1.997-58.24c5.52-1.715,13.706-0.428,24.554,3.853c10.85,4.283,18.794,7.952,23.84,10.994\n                    c5.046,3.041,9.089,5.618,12.135,7.708c17.705-4.947,35.976-7.421,54.818-7.421s37.117,2.474,54.823,7.421l10.849-6.849\n                    c7.419-4.57,16.18-8.758,26.262-12.565c10.088-3.805,17.802-4.853,23.134-3.138c8.562,21.509,9.325,40.922,2.279,58.24\n                    c15.036,16.18,22.559,35.787,22.559,58.817c0,16.178-1.958,30.497-5.853,42.966c-3.9,12.471-8.941,22.457-15.125,29.979\n                    c-6.191,7.521-13.901,13.85-23.131,18.986c-9.232,5.14-18.182,8.85-26.84,11.136c-8.662,2.286-18.415,4.004-29.263,5.146\n                    c9.894,8.562,14.842,22.077,14.842,40.539v60.237c0,3.422,1.19,6.279,3.572,8.562c2.379,2.279,6.136,2.95,11.276,1.995\n                    c44.163-14.653,80.185-41.062,108.068-79.226c27.88-38.161,41.825-81.126,41.825-128.906\n                    C438.536,184.851,428.728,148.168,409.132,114.573z\"\n          />\n        </g>\n      </svg>\n    );\n  }\n}\n\nexport default styled(GitHubIcon)`\n    margin-left: 12px;\n    vertical-align: middle;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport GitHubIcon from './GitHubIcon';\n\nconst FooterContent = styled.div`\n  flex:none;\n  background-color: rgb(232, 232, 232);\n  color: rgb(0, 0, 0);\n  padding-top: 10px;\n  text-align: center;\n\n  & .footerheart {\n    color: #D4726A;\n  }\n\n  & .footerlink {\n    text-decoration: none;\n    color: #226666;\n  }\n`;\n\nconst Footer = () => (\n  <FooterContent>\n    <a\n      href=\"https://github.com/iamskab/15-puzzle\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <GitHubIcon className=\"menuIcon\" />\n    </a>\n    <p>\n      Made with{' '}\n      <span className=\"footerheart\">♥</span>\n      {' '}by{' '}\n      <a\n        className=\"footerlink\"\n        href=\"https://github.com/iamskab\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        {' '}Sourav :)\n      </a>\n    </p>\n  </FooterContent>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport levelFactory from './../lib/levels-factory';\nimport Game from './Game';\nimport Footer from './Footer';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    const level = props.level ? props.level : levelFactory(4 ** 2);\n    const originalLevel = Object.assign({}, level);\n\n    this.state = {\n      original: originalLevel,\n      level,\n    };\n  }\n\n  onResetClick = () => {\n    this.setState({\n      level: {\n        tileSet: this.state.original.tileSet,\n      },\n    });\n  };\n\n  onNewClick = () => {\n    const newLevel = levelFactory(4 ** 2);\n    const newOriginalLevel = Object.assign({}, newLevel);\n    this.setState({\n      level: newLevel,\n      original: newOriginalLevel,\n    });\n  };\n\n  render() {\n    const { className } = this.props;\n\n    return (\n      <div className={className}>\n        <Game\n          gridSize={4}\n          tileSize={90}\n          numbers={this.state.level.tileSet}\n          onResetClick={this.onResetClick}\n          onNewClick={this.onNewClick}\n          original={this.state.original.tileSet}\n        />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  level: PropTypes.shape({\n    tileSet: PropTypes.arrayOf(PropTypes.number).isRequired,\n  }),\n};\n\nexport default styled(App)`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles/index.css';\nimport levelFactory from './lib/levels-factory';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\n// import injectTapEventPlugin from 'react-tap-event-plugin';\n\n// Needed for onTouchTap\n// http://stackoverflow.com/a/34015469/988941\n// injectTapEventPlugin();\n\nconst MuiTheme = () => (\n  <MuiThemeProvider>\n    <App level={levelFactory(4 ** 2)} />\n  </MuiThemeProvider>\n);\n\nReactDOM.render(<MuiTheme />, document.getElementById('root'));\n"],"sourceRoot":""}